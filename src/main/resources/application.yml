# 应用服务 WEB 访问端口
server:
  port: 8080
  servlet:
    context-path: /api
    #设置cookie保存时间，用于基于session的登录验证
    session:
      cookie:
        max-age: 1800 # 30 minutes  in seconds
# 数据源配置
spring:
  profiles:
    #使用dev环境配置，需要创建 application-dev.yml 文件
    active: dev
  session:
    # 使用Redis作为Session存储
    store-type: redis
    timeout: 1800 # 30 minutes  in seconds
  datasource:
    # 使用Druid连接池
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://${your.datasource.host}:${your.datasource.port}/${your.datasource.database}?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
      username: ${your.datasource.username}
      password: ${your.datasource.password}
      # Druid监控配置
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        login-username: ${your.datasource.stat-view-servlet.login-username}
        login-password: ${your.datasource.stat-view-servlet.login-password}
  redis:
    #单节点redis配置
    host: ${your.redis.host}
    port: ${your.redis.port}
    database: ${your.redis.database}
#    redis分片集群配置
#    cluster:
#      nodes: ${your.redis.cluster.nodes}
mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.greendam.template.model.entity
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 开启驼峰命名
    map-underscore-to-camel-case: true

knife4j:
  enable: true
  basic:
    enable: ${knife4j.basic.enable}
    username: ${knife4j.basic.username}
    password: ${knife4j.basic.password}
  openapi:
    title: FriendXXX接口文档
    group:
      default:
        group-name: 默认分组
        api-rule: package
        api-rule-resources:
          - com.xzh.friendxxx.controller
your:
  alioss:
    access-key-id: ${your.alioss.access-key-id}
    bucket-name: ${your.alioss.bucket-name}
    endpoint: ${your.alioss.endpoint}
    access-key-secret: ${your.alioss.access-key-secret}
  jwt:
    admin-secret-key: ${your.jwt.admin-secret-key}
    admin-ttl: ${your.jwt.admin-ttl}
    admin-token-name: ${your.jwt.admin-token-name}
    user-secret-key: ${your.jwt.user-secret-key}
    user-ttl: ${your.jwt.user-ttl}
    user-token-name: ${your.jwt.user-token-name}
# WebSocket配置
websocket:
  server:
    url: ws://127.0.0.1:8080/api/websocket/1

